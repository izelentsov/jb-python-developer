type: edu
custom_name: stage4
files:
- name: tests.py
  visible: false
  text: |
    from hstest.stage_test import StageTest
    from hstest.test_case import TestCase
    from hstest.check_result import CheckResult

    import os
    import shutil

    import sys
    if sys.platform.startswith("win"):
        import _locale
        # pylint: disable=protected-access
        _locale._getdefaultlocale = (lambda *args: ['en_US', 'utf8'])

    CheckResult.correct = lambda: CheckResult(True, '')
    CheckResult.wrong = lambda feedback: CheckResult(False, feedback)


    class TextBasedBrowserTest(StageTest):

        def generate(self):

            dir_for_files = 'tb_tabs'
            return [
                TestCase(
                    stdin='bloomberg.com\nbloomberg\nexit',
                    attach='Bloomberg',
                    args=[dir_for_files]
                ),
                TestCase(
                    stdin='nytimes.com\nnytimes\nexit',
                    attach='The New York Times',
                    args=[dir_for_files]
                ),
                TestCase(
                    stdin='nytimescom\nexit',
                    args=[dir_for_files]
                ),
                TestCase(
                    stdin='bloombergcom\nexit',
                    args=[dir_for_files]
                ),
            ]

        def _check_files(self, path_for_tabs: str, right_word: str) -> bool:
            """
            Helper which checks that browser saves visited url in files and
            provides access to them.

            :param path_for_tabs: directory which must contain saved tabs
            :param right_word: Word-marker which must be in right tab
            :return: True, if right_words is present in saved tab
            """

            path, dirs, filenames = next(os.walk(path_for_tabs))

            for file in filenames:
                print("file: {}".format(file))
                with open(os.path.join(path_for_tabs, file), 'r', encoding='utf-8') as tab:
                    content = tab.read()
                    print(content)
                    if 'html' in content and right_word in content:
                        return True

            return False

        def check(self, reply, attach):

            # Incorrect URL
            if attach is None:
                if '<p>' in reply:
                    return CheckResult.wrong('You haven\'t checked was URL correct')
                else:
                    return CheckResult.correct()

            # Correct URL
            if isinstance(attach, str):
                right_word = attach

                path_for_tabs = os.path.join(os.curdir, 'tb_tabs')

                if not os.path.isdir(path_for_tabs):
                    return CheckResult.wrong("There are no directory for tabs")

                if not self._check_files(path_for_tabs, right_word):
                    return CheckResult.wrong('There are no correct saved tabs')

                shutil.rmtree(path_for_tabs)

                if '<body' in reply and right_word in reply:
                    return CheckResult.correct()

                return CheckResult.wrong('You haven\'t print result of request')


    TextBasedBrowserTest('browser.browser').run_tests()
  learner_created: false
- name: browser/browser.py
  visible: true
  text: "import sys\nimport os\nimport collections\n\nnytimes_com = '''\nThis New\
    \ Liquid Is Magnetic, and Mesmerizing\n\nScientists have created “soft” magnets\
    \ that can flow \nand change shape, and that could be a boon to medicine \nand\
    \ robotics. (Source: New York Times)\n\n\nMost Wikipedia Profiles Are of Men.\
    \ This Scientist Is Changing That.\n\nJessica Wade has added nearly 700 Wikipedia\
    \ biographies for\n important female and minority scientists in less than two\
    \ \n years.\n\n'''\n\nbloomberg_com = '''\nThe Space Race: From Apollo 11 to Elon\
    \ Musk\n\nIt's 50 years since the world was gripped by historic images\n of Apollo\
    \ 11, and Neil Armstrong -- the first man to walk \n on the moon. It was the height\
    \ of the Cold War, and the charts\n were filled with David Bowie's Space Oddity,\
    \ and Creedence's \n Bad Moon Rising. The world is a very different place than\
    \ \n it was 5 decades ago. But how has the space race changed since\n the summer\
    \ of '69? (Source: Bloomberg)\n\n\nTwitter CEO Jack Dorsey Gives Talk at Apple\
    \ Headquarters\n\nTwitter and Square Chief Executive Officer Jack Dorsey \n addressed\
    \ Apple Inc. employees at the iPhone maker’s headquarters\n Tuesday, a signal\
    \ of the strong ties between the Silicon Valley giants.\n'''\n\n# write your code\
    \ here\n\n\ndef run():\n\n    store_dir = sys.argv[1]\n    if not os.path.exists(store_dir):\n\
    \        os.mkdir(store_dir)\n    history = collections.deque()\n    current =\
    \ None\n\n    while True:\n        print(f\"State: {current}; {history}\")\n \
    \       cmd = input()\n        if cmd == 'exit':\n            break\n\n      \
    \  text, current = get_text(cmd, store_dir, history, current)\n\n        if text:\n\
    \            print(text)\n        else:\n            print(\"Error: Incorrect\
    \ URL\")\n\n\ndef get_text(cmd, store_dir, history, current):\n    if cmd == 'back':\n\
    \        cmd = go_back(history)\n        if not cmd:\n            return None,\
    \ current\n    elif current:\n        history.append(current)\n\n    text = get_stored(cmd,\
    \ store_dir)\n    if text:\n        return text, cmd\n\n    if is_url(cmd):\n\
    \        text = get_url(cmd)\n        if text:\n            st_name = store(cmd,\
    \ text, store_dir)\n            return text, st_name\n\n    return None, cmd\n\
    \n\ndef go_back(history):\n    if len(history) > 0:\n        return history.pop()\n\
    \    return None\n\n\ndef get_stored(cmd, store_dir):\n    path = store_dir +\
    \ '/' + cmd\n    if os.path.exists(path):\n        with open(path, 'r') as f:\n\
    \            return f.read()\n    return None\n\n\ndef is_url(cmd):\n    return\
    \ '.' in cmd\n\n\ndef get_url(url):\n    text = None\n    if url == 'nytimes.com':\n\
    \        text = nytimes_com\n    elif url == 'bloomberg.com':\n        text =\
    \ bloomberg_com\n    return text\n\n\ndef store(url, text, store_dir):\n    name\
    \ = store_name(url)\n    with open(store_dir + '/' + name, 'w') as f:\n      \
    \  f.write(text)\n    return name\n\n\ndef store_name(url):\n    return url[:url.rindex('.')]\n\
    \n\nrun()\n"
  learner_created: true
- name: browser/store/nytimes
  visible: true
  learner_created: true
- name: browser/store/bloomberg
  visible: true
  learner_created: true
- name: browser/store/google
  visible: true
  learner_created: true
- name: browser/store/python
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/79/stages/439/implement
status: Solved
record: 4
